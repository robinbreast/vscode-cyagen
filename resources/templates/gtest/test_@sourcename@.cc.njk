/// this is generated googletest script based on {{ sourcename }}.c

#include "wrapper_{{ sourcename }}.h"

// MANUAL SECTION: {{ generateUUID(sourcename ~ "global") }}
// MANUAL SECTION END

/// test fixture for test case
class {{ sourcename | capitalize }} : public ::testing::Test
{
protected:
  void SetUp() override
  {
{%- for var in static_vars %}
  {%- if var.array_size !== 0 %}
    {%- if var.is_local %}
    // MANUAL SECTION: {{ generateUUID(var.func_name ~ var.name ~ "init") }}
    // TODO: adapt initialization according to your test plan
    memset(ACCESS_{{ lsvMacroName }}({{ var.func_name}}, {{ var.name }}), 0, sizeof(ACCESS_{{ lsvMacroName }}({{ var.func_name }}, {{ var.name }})));
    // MANUAL SECTION END
    {%- else %}
    // MANUAL SECTION: {{ generateUUID(var.name ~ "init") }}
    // TODO: adapt initialization according to your test plan
    memset({{ var.name }}, 0, sizeof({{ var.name }}));
    // MANUAL SECTION END
    {%- endif %}
  {%- else %}
    {%- if var.is_local %}
    ACCESS_{{ lsvMacroName }}({{ var.func_name }}, {{ var.name_expr }}) = {{ var.init }};
    {%- else %}
    {{ var.name_expr }} = {{ var.init }};
    {%- endif %}
  {%- endif %}
{%- endfor %}
    // MANUAL SECTION: {{ generateUUID(sourcename ~ "setup") }}
    // MANUAL SECTION END
  }
  void TearDown() override
  {
    // MANUAL SECTION: {{ generateUUID(sourcename ~ "teardown") }}
    // MANUAL SECTION END
  }
};

{% for fnc in fncs -%}
/// define a test case for the {{ fnc.name }}() function
TEST_F({{ sourcename | capitalize }}, {{ fnc.name }})
{
  // MANUAL SECTION: {{ generateUUID(fnc.name) }}
  // MANUAL SECTION END
}
{% endfor %}

/// add yet another tests
// MANUAL SECTION: {{ generateUUID(sourcename ~ "yet-another-tests") }}
// MANUAL SECTION END

int main(int argc, char **argv)
{
  ::testing::InitGoogleTest(&argc, argv);
  return RUN_ALL_TESTS();
}
