/// this is generated googletest script based on {{ sourcename }}.c

#include "wrapper_{{ sourcename }}.h"
// MANUAL SECTION: user-defined-include
// MANUAL SECTION END

// MANUAL SECTION: user-defined-definitions
// MANUAL SECTION END

// MANUAL SECTION: user-defined-global
// MANUAL SECTION END

/// test fixture for test case
class {{ sourcename | capitalize }} : public ::testing::Test
{
protected:
  void SetUp() override
  {
{%- for var in static_vars %}
  {%- if var.is_local %}
    VARIABLE_INITIALIZE(_{{ var.func_name }}_{{ var.name }});
  {%- else %}
    VARIABLE_INITIALIZE({{ var.name }});
  {%- endif %}
{%- endfor %}
    // MANUAL SECTION: user-defined-setup
    // MANUAL SECTION END
  }
  void TearDown() override
  {
    // MANUAL SECTION: user-defined-teardown
    // MANUAL SECTION END
  }
};

{% for fnc in fncs -%}
/// define a test case for the {{ fnc.name }}() function
TEST_F({{ sourcename | capitalize }}, {{ fnc.name }})
{
  Mock mock;
  ::testing::Sequence seq;
  // MANUAL SECTION: user-defined-{{ fnc.name }}
  // MANUAL SECTION END
}
{% endfor %}

/// add yet another tests
// MANUAL SECTION: user-defined-yet-another-tests
// MANUAL SECTION END

int main(int argc, char **argv)
{
  ::testing::InitGoogleTest(&argc, argv);
  return RUN_ALL_TESTS();
}
